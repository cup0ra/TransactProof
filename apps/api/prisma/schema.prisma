// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  walletAddress String    @unique @map("wallet_address")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  
  // Relations
  receipts      Receipt[]
  sessions      Session[]

  @@map("users")
}

model Nonce {
  id            String   @id @default(uuid())
  walletAddress String   @map("wallet_address")
  nonce         String   @unique
  used          Boolean  @default(false)
  createdAt     DateTime @default(now()) @map("created_at")
  expiresAt     DateTime @map("expires_at")

  @@map("nonces")
}

model Session {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  jwtId     String   @unique @map("jwt_id")
  createdAt DateTime @default(now()) @map("created_at")
  expiresAt DateTime @map("expires_at")
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Receipt {
  id          String    @id @default(uuid())
  userId      String?   @map("user_id")
  txHash      String    @map("tx_hash")
  sender      String
  receiver    String
  amount      Float
  token       String    @default("USDT")
  chainId     Int       @map("chain_id") @default(8453)
  pdfUrl      String    @map("pdf_url")
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  
  // Relations
  user        User?     @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("receipts")
}
